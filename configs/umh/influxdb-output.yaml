# UMH Core Stand-alone Flow - InfluxDB Data Export
# Stand-alone flows are used for data transformation and export to external systems
# This flow consumes data from the UNS and writes it to InfluxDB

dataFlow:
  - name: influxdb-export
    desiredState: active
    dataFlowComponentConfig:
      benthos:
        input:
          uns:
            topics:
              # Subscribe to raw data from office devices
              - "umh.v1.{{ .ORG }}.{{ .SITE }}.office.+._raw.+"
        pipeline:
          processors:
            - bloblang: |-
                # Convert UNS topic structure to InfluxDB line protocol
                let topic_parts = metadata("umh_topic").split(".");
                let org = topic_parts[1];
                let site = topic_parts[2]; 
                let area = topic_parts[3];
                let device = topic_parts[4];
                let contract = topic_parts[5];
                let tag_name = topic_parts[6];
                
                # Only process _raw data contract
                root = if contract == "_raw" {
                  "tasmota_sensors,org=" + org + ",site=" + site + ",area=" + area + ",device=" + device + ",tag=" + tag_name + " value=" + this.value.string() + " " + this.timestamp_ms.string()
                } else {
                  deleted()
                }
        output:
          http_client:
            batching:
              count: 10
              period: "1s"
            headers:
              Authorization: "Token {{ .INFLUX_TOKEN }}"
              Content-Type: "text/plain"
            max_in_flight: 5
            retry_period: "1s"
            timeout: "5s"
            url: "http://{{ .INFLUX_HOST }}:{{ .INFLUX_PORT }}/api/v2/write?org={{ .INFLUX_ORG }}&bucket={{ .INFLUX_BUCKET }}&precision=ms"
            verb: POST
      variables:
        ORG: "YOUR_ORG"
        SITE: "YOUR_SITE"
        INFLUX_HOST: "YOUR_PI_IP"
        INFLUX_PORT: "8086"
        INFLUX_TOKEN: "YOUR_INFLUX_TOKEN"
        INFLUX_ORG: "YOUR_ORG"
        INFLUX_BUCKET: "YOUR_BUCKET"

# Placeholder Values to Replace:
# YOUR_ORG                 - e.g., DKLP (must match MQTT input config)
# YOUR_SITE                - e.g., Office (must match MQTT input config)  
# YOUR_PI_IP               - e.g., 192.168.68.56 (your Raspberry Pi's fixed IP)
# YOUR_INFLUX_TOKEN        - Your InfluxDB access token from setup
# YOUR_BUCKET              - e.g., dklp (your InfluxDB bucket name)

# Notes:
# 1. This consumes data that was processed by the MQTT input configuration
# 2. Only processes messages with _historian data contract (time-series data)
# 3. Converts to InfluxDB line protocol format for storage
# 4. Uses HTTP API to write directly to your InfluxDB instance