# UMH Core Bridge Configuration - MQTT Device Connectivity
# Bridges are used for device connectivity with health monitoring and UNS integration
# This configures a bridge to connect Tasmota devices to the Unified Namespace

protocolConverter:
  - name: tasmota-office-bridge
    desiredState: active
    protocolConverterServiceConfig:
      location:
        2: "office"        # Area level
        3: "tasmota-device" # Device level
      config:
        connection:
          nmap:
            target: "{{ .MQTT_BROKER_IP }}"
            port: "{{ .MQTT_BROKER_PORT }}"
        dataflowcomponent_read:
          benthos:
            input:
              mqtt:
                client_id: "{{ .CLIENT_ID }}"
                topics:
                  - "tele/{{ .ORG }}/{{ .SITE }}/tasmota/+/SENSOR"
                urls:
                  - "tcp://{{ .MQTT_BROKER_IP }}:{{ .MQTT_BROKER_PORT }}"
            pipeline:
              processors:
                - tag_processor:
                    defaults: |
                      let topic_parts = (msg.meta["mqtt_topic"] || "").split("/");
                      let device_id = topic_parts[4] || "unknown";
                      msg.meta.location_path = "{{ .location_path }}." + device_id;
                      msg.meta.data_contract = "_raw";
                      return msg;
                    conditions:
                      - if: msg.payload?.ENERGY?.Today != null
                        then: |-
                          msg.meta.tag_name = "kwhtoday";
                          msg.meta.timestamp_ms = Date.now();
                          msg.payload = msg.payload.ENERGY.Today;
                          return msg;
                      - if: msg.payload?.ENERGY?.Power != null
                        then: |-
                          msg.meta.tag_name = "power";
                          msg.meta.timestamp_ms = Date.now();
                          msg.payload = msg.payload.ENERGY.Power;
                          return msg;
                      - if: msg.payload?.SI7021?.Temperature != null
                        then: |-
                          msg.meta.tag_name = "temperature";
                          msg.meta.timestamp_ms = Date.now();
                          msg.payload = msg.payload.SI7021.Temperature;
                          return msg;
            output:
              uns: {}
      variables:
        MQTT_BROKER_IP: "YOUR_PI_IP"
        MQTT_BROKER_PORT: "1883"
        CLIENT_ID: "umh-tasmota-bridge"
        ORG: "YOUR_ORG"
        SITE: "YOUR_SITE"

# Placeholder Values to Replace:
# YOUR_UNIQUE_CLIENT_ID    - e.g., mqtt-ingestion-client-001
# YOUR_ORG                 - e.g., DKLP (must match your organization)
# YOUR_SITE                - e.g., Office (must match your site name)
# YOUR_PI_IP               - e.g., 192.168.68.56 (your Raspberry Pi's fixed IP)

# Notes:
# 1. This creates the Unified Namespace structure: YOUR_ORG.YOUR_SITE.device_id
# 2. The _historian data contract tells UMH this is time-series data
# 3. Add more conditions in the processor for additional sensor data points